<style>
.cart_section {
  padding: 60px 0;
  background: #f8f9fa;
  min-height: calc(100vh - 200px);
}

.cart_title {
  font-size: 24px;
  font-weight: 600;
  color: #1e1e27;
  margin-bottom: 30px;
  padding-bottom: 15px;
  border-bottom: 1px solid #e0e0e0;
}

.cart_empty {
  text-align: center;
  padding: 60px 0;
}

.cart_empty_icon {
  font-size: 64px;
  margin-bottom: 20px;
}

.cart_empty_text {
  font-size: 18px;
  color: #6c757d;
  margin-bottom: 20px;
}

.cart_table {
  background: #fff;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 0 10px rgba(0,0,0,0.05);
}

.cart_table thead {
  background: #f8f9fa;
}

.cart_table th {
  font-weight: 600;
  text-transform: uppercase;
  font-size: 12px;
  letter-spacing: 0.5px;
  padding: 15px !important;
  border-bottom: 2px solid #e9ecef !important;
}

.cart_table td {
  padding: 20px 15px !important;
  vertical-align: middle !important;
  border-color: #e9ecef !important;
}

.quantity {
  display: flex;
  align-items: center;
  justify-content: center;
}

.quantity button {
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  border-radius: 4px;
}

.quantity span {
  min-width: 30px;
  text-align: center;
  font-weight: 500;
}

.button {
  display: flex;               /* Make it a flex container */
  align-items: center;         /* Vertical centering */
  justify-content: center;     /* Horizontal centering */
  padding: 12px 24px;           /* Bigger padding */
  min-height: 50px;             /* Taller buttons */
  min-width: 200px;             /* Wider buttons */
  border-radius: 6px;
  font-size: 14px;
  font-weight: 600;
  text-transform: uppercase;
  text-decoration: none;
  transition: all 0.3s ease;
  cursor: pointer;
  border: none;
  outline: none;
  text-align: center;
  white-space: normal;         /* Allow text to wrap if long */
}

.continue_shopping_button {
  background: #d78c22 !important;
  color: #1e1e27;
  margin-right: 15px;
}

.continue_shopping_button:hover {
  background: #e8e8e8;
  color: #1e1e27;
  text-decoration: none;
}

button.checkout_button {
  background: #480606 !important; /* dark red */
  color: #fff !important;
}

button.checkout_button:hover {
  background: #300101 !important; /* darker red */
  color: #fff !important;
}


.quantity button:hover {
  background: #f8f9fa;
}

.btn-outline-danger:hover {
  background-color: #dc3545;
  border-color: #dc3545;
}
</style>

<%- include('../partials/user/header') %>

<div class="super_container">
  <div class="super_container_inner">
    <div class="super_overlay"></div>
    
    <!-- Cart -->
    <div class="cart_section">
      <div class="container">
        <div class="row">
          <div class="col">
            <div class="cart_container">
              <div class="cart_title">Shopping Cart</div>
              
              <% if (!cart || cart.length === 0) { %>
                <div class="cart_empty">
                  <div class="cart_empty_icon">ðŸ›’</div>
                  <div class="cart_empty_text">Your cart is empty</div>
                  <a href="/shop" class="btn btn-dark">Continue Shopping</a>
                </div>
              <% } else { %>
                <div class="cart_items">
                  <table class="table cart_table">
                    <thead>
                      <tr>
                        <th class="text-center">Product</th>
                        <th class="text-center">Price</th>
                        <th class="text-center">Quantity</th>
                        <th class="text-center">Total</th>
                        <th class="text-center">Action</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% 
                      let subtotal = 0;
                      cart.forEach(item => { 
                        const itemTotal = item.productId ? item.productId.salesPrice * item.quantity : 0;
                        subtotal += itemTotal;
                      %>
                        <tr>
                          <td class="text-center align-middle">
                            <%= item.productId ? item.productId.productName : 'Deleted Product' %>
                          </td>
                          <td class="text-center align-middle">
                            â‚¹<%= item.productId ? item.productId.salesPrice.toFixed(2) : '0.00' %>
                          </td>
                          <td class="text-center align-middle">
                            <div class="quantity">
                              <button class="btn btn-sm btn-outline-secondary dec-btn" 
                                      data-id="<%= item.productId ? item.productId._id : '' %>">-</button>
                              <span class="mx-2"><%= item.quantity %></span>
                              <button class="btn btn-sm btn-outline-secondary inc-btn" 
                                      data-id="<%= item.productId ? item.productId._id : '' %>">+</button>
                            </div>
                          </td>
                          <td class="text-center align-middle">
                            â‚¹<%= itemTotal.toFixed(2) %>
                          </td>
                          <td class="text-center align-middle">
                            <button class="btn btn-sm btn-outline-danger remove-btn" 
                                    data-id="<%= item.productId ? item.productId._id : '' %>">
                              <i class="fa fa-trash"></i>
                            </button>
                          </td>
                        </tr>
                      <% }) %>
                    </tbody>
                  </table>
                  
                  <div class="cart_buttons d-flex justify-content-end mt-4">
                    <a href="/shop" class="button continue_shopping_button">Continue Shopping</a>
                    <button id="checkout-btn" class="button checkout_button">
                      Proceed to Checkout (â‚¹<%= subtotal.toFixed(2) %>)
                    </button>
                  </div>
                </div>
              <% } %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  // Function to update the UI after quantity change
  function updateQuantityUI(btn, newQuantity) {
    const quantitySpan = btn.parentElement.querySelector('span');
    const row = btn.closest('tr');
    const price = parseFloat(row.querySelector('td:nth-child(2)').textContent.replace('â‚¹', ''));
    const totalCell = row.querySelector('td:nth-child(4)');
    
    quantitySpan.textContent = newQuantity;
    totalCell.textContent = 'â‚¹' + (price * newQuantity).toFixed(2);
    updateCheckoutTotal();
  }

  // Function to update the checkout total
  function updateCheckoutTotal() {
    let subtotal = 0;
    document.querySelectorAll('tbody tr').forEach(row => {
      const price = parseFloat(row.querySelector('td:nth-child(2)').textContent.replace('â‚¹', ''));
      const quantity = parseInt(row.querySelector('.quantity span').textContent);
      subtotal += price * quantity;
    });
    
    const checkoutBtn = document.getElementById('checkout-btn');
    if (checkoutBtn) {
      checkoutBtn.textContent = `Proceed to Checkout (â‚¹${subtotal.toFixed(2)})`;
    }
  }

  // Show error message using SweetAlert
  function showError(message) {
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: message,
      confirmButtonText: 'OK'
    });
  }

  document.addEventListener('DOMContentLoaded', function () {
    // Increment quantity
    document.querySelectorAll('.inc-btn').forEach(btn => {
      btn.addEventListener('click', async function () {
        const id = this.dataset.id;
        try {
          const response = await fetch(`/cart/increment/${id}`, { method: 'POST' });
          const result = await response.json();
          
          if (result.success) {
            const currentQty = parseInt(this.previousElementSibling.textContent);
            updateQuantityUI(this, currentQty + 1);
          } else {
            showError(result.message || 'Failed to increase quantity');
          }
        } catch (error) {
          showError('Failed to update quantity.');
          console.error(error);
        }
      });
    });

    // Decrement quantity
    document.querySelectorAll('.dec-btn').forEach(btn => {
      btn.addEventListener('click', async function () {
        const id = this.dataset.id;
        try {
          const response = await fetch(`/cart/decrement/${id}`, { method: 'POST' });
          const result = await response.json();
          
          if (result.success) {
            const currentQty = parseInt(this.nextElementSibling.textContent);
            if (currentQty > 1) {
              updateQuantityUI(this, currentQty - 1);
            } else {
              this.closest('tr').remove();
              updateCheckoutTotal();
            }
          } else {
            showError(result.message || 'Failed to decrease quantity');
          }
        } catch (error) {
          showError('Failed to update quantity.');
          console.error(error);
        }
      });
    });

    // Remove product
    document.querySelectorAll('.remove-btn').forEach(btn => {
      btn.addEventListener('click', function () {
        const id = this.dataset.id;
        Swal.fire({
          title: 'Are you sure?',
          text: 'This will remove the item from your cart.',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#1e1e27',
          cancelButtonColor: '#6c757d',
          confirmButtonText: 'Yes, remove it!'
        }).then((result) => {
          if (result.isConfirmed) {
            fetch(`/cart/remove/${id}`, { method: 'POST' })
              .then(() => location.reload());
          }
        });
      });
    });

    // Checkout validation
    document.getElementById('checkout-btn')?.addEventListener('click', function () {
      fetch(`/cart/validate-checkout`, { method: 'POST' })
        .then(res => res.json())
        .then(data => {
          if (data.success) {
            window.location.href = '/checkout';
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Cannot Proceed',
              text: data.message
            });
          }
        });
    });
  });
</script>

<%- include('../partials/admin/footer') %>
