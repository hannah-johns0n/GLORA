<%- include('../partials/admin/header') %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<main class="col-md-10 ms-sm-auto col-lg-10 px-md-4">
  <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap">
    <h1 class="mb-3 mb-md-0">Products List</h1>
    <a href="/admin/products/add" class="btn btn-primary mb-3 mb-md-0">
      <i class="bi bi-plus-circle"></i> Add Product
    </a>
  </div>
  
  <div class="table-responsive">
    <table class="table table-hover table-bordered mt-3">
      <thead class="table-dark">
        <tr>
          <th scope="col">Product Name</th>
          <th scope="col">Category</th>
          <th scope="col">Regular Price</th>
          <th scope="col">Sales Price</th>
          <th scope="col">Quantity</th>
          <th scope="col">Created At</th>
          <th scope="col">Status</th>
          <th scope="col">Edit</th>
        </tr>
      </thead>
      
      <tbody>
        <% products.forEach(product => { %>
        <tr>

          <td><%= product.productName %></td>
          <td><%= product.category || 'N/A' %></td>
          <td>
            <% if (typeof product.regularPrice !== 'undefined') { %>
              ₹<%= product.regularPrice.toLocaleString('en-IN') %>
            <% } else { %>
              N/A
            <% } %>
          </td>
          <td>
            <% if (typeof product.salesPrice !== 'undefined') { %>
              ₹<%= product.salesPrice.toLocaleString('en-IN') %>
            <% } else { %>
              N/A
            <% } %>
          </td>
          <td><%= typeof product.quantity !== 'undefined' ? product.quantity : 'N/A' %></td>
          <td><%= new Date(product.createdAt).toLocaleDateString('en-IN') %></td>
          <td class="text-center">
            <button onclick="handleBlockAction(this, '<%= product._id %>', <%= !!product.isBlocked %>)" 
                    class="btn btn-sm <%= product.isBlocked ? 'btn-success' : 'btn-danger' %>">
              <i class="bi <%= product.isBlocked ? 'bi-unlock' : 'bi-lock' %>"></i>
              <%= product.isBlocked ? 'Unblock' : 'Block' %>
            </button>
          </td>
          <td class="text-center">
            <a href="/admin/products/edit/<%= product._id %>" class="btn btn-sm btn-info">
              <i class="bi bi-pencil"></i> Edit
            </a>
          </td>
        </tr>
        <% }); %>
      </tbody>
    </table>
  </div>

  <% if (totalPages > 1) { %>
    <nav aria-label="Page navigation">
      <ul class="pagination justify-content-center">
        <% for (let i=1; i <=totalPages; i++) { %>
          <li class="page-item <%= i === currentPage ? 'active' : '' %>">
            <a class="page-link" href="?page=<%= i %>">
              <%= i %>
            </a>
          </li>
          <% } %>
      </ul>
    </nav>
  <% } %>
</main>

<%- include('../partials/admin/footer') %>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  async function handleBlockAction(button, productId, isBlocked) {
    const action = isBlocked ? 'unblock' : 'block';
    const buttonText = button.innerHTML;
    
    try {
      button.disabled = true;
      button.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...';
      
      const result = await Swal.fire({
        title: 'Are you sure?',
        text: `Do you want to ${action} this product?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: isBlocked ? '#28a745' : '#dc3545',
        cancelButtonColor: '#6c757d',
        confirmButtonText: `Yes, ${action} it!`,
        cancelButtonText: 'No, cancel!',
        reverseButtons: true
      });

      if (result.isConfirmed) {
        const response = await fetch(`/admin/toggle-product-block`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
            'X-Requested-With': 'XMLHttpRequest'
          },
          body: JSON.stringify({ id: productId }),
          credentials: 'include'
        });

        if (!response.ok) {
          const errorData = await response.json().catch(() => ({}));
          throw new Error(errorData.message || 'Failed to update product status');
        }

        const data = await response.json();
        
        const newIsBlocked = !isBlocked;
        button.className = `btn btn-sm ${newIsBlocked ? 'btn-success' : 'btn-danger'}`;
        button.innerHTML = `
          <i class="bi ${newIsBlocked ? 'bi-unlock' : 'bi-lock'}"></i>
          ${newIsBlocked ? 'Unblock' : 'Block'}
        `;
        
        await Swal.fire({
          icon: 'success',
          title: data.message || `Product ${action}ed successfully!`,
          showConfirmButton: false,
          timer: 1500
        });
        
        setTimeout(() => {
          window.location.reload();
        }, 1500);
      } else {
        button.disabled = false;
        button.innerHTML = buttonText;
      }
    } catch (error) {
      console.error('Error:', error);
      button.disabled = false;
      button.innerHTML = buttonText;
      
      await Swal.fire({
        icon: 'error',
        title: 'Error',
        text: error.message || 'Failed to process your request. Please try again.',
        confirmButtonText: 'OK'
      });
    }
  }
</script>